# sysctl-hardening.conf
# Base host-safe hardening

##############################################################################
# FILE DESCRIPTORS AND INOTIFY LIMITS
##############################################################################

# Maximum number of open file descriptors system-wide
fs.file-max = 100000

# Inotify instance and watch limits for desktop usability and IDEs
fs.inotify.max_user_instances = 2048
fs.inotify.max_user_watches   = 1048576

##############################################################################
# FILE AND PROCESS HARDENING
##############################################################################

# Protect against symlink and hardlink attacks in world-writable directories
fs.protected_symlinks = 1
fs.protected_hardlinks = 1

# Protect FIFO and regular files from being abused in world-writable directories
fs.protected_fifos = 2
fs.protected_regular = 2

# Do not allow setuid binaries to produce core dumps
fs.suid_dumpable = 0

##############################################################################
# CORE DUMPS, CRASH HANDLING, AND KERNEL VISIBILITY
##############################################################################

# Use PID in core dump file names
kernel.core_uses_pid = 1

# Restrict dmesg access to root only
kernel.dmesg_restrict = 1

# Disable kexec system call to prevent loading arbitrary kernels
kernel.kexec_load_disabled = 1

# Restrict exposure of kernel pointers in /proc and logs
kernel.kptr_restrict = 2

# Limit number of oops and warnings to avoid flooding logs
kernel.oops_limit = 100
kernel.warn_limit = 100

# Disable magic SysRq key combinations
kernel.sysrq = 0

# Disable unprivileged use of eBPF
kernel.unprivileged_bpf_disabled = 1

# Enable full address space layout randomization
kernel.randomize_va_space = 2

# Restrict perf event access (further tightened on servers)
kernel.perf_event_paranoid = 2

# Restrict ptrace scope (further tightened on servers)
kernel.yama.ptrace_scope = 1

# Minimum mappable virtual memory address
vm.mmap_min_addr = 65536

# Increase entropy for address space layout randomization
vm.mmap_rnd_bits = 32
vm.mmap_rnd_compat_bits = 16

# Disable unprivileged use of userfaultfd
vm.unprivileged_userfaultfd = 0

##############################################################################
# BPF AND TTY HARDENING
##############################################################################

# Enable BPF JIT hardening
net.core.bpf_jit_harden = 2

# Prevent autoloading of TTY line disciplines
dev.tty.ldisc_autoload = 0

# Disable legacy TIOCSTI ioctl
dev.tty.legacy_tiocsti = 0

##############################################################################
# NETWORKING: HOST POSTURE
##############################################################################

# Disable IPv4 forwarding by default (host-only, not a router)
net.ipv4.ip_forward = 0

# Disable IPv6 forwarding by default
net.ipv6.conf.all.forwarding = 0
net.ipv6.conf.default.forwarding = 0

##############################################################################
# NETWORKING: ICMP, ARP, AND ROUTING HYGIENE (IPv4)
##############################################################################

# Ignore ICMP echo requests to broadcast addresses
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Ignore bogus ICMP error responses
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Enable RFC1337 protection against TIME-WAIT assassination
net.ipv4.tcp_rfc1337 = 1

# ARP anti-flux to reduce conflicts and spoofing
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.default.arp_ignore = 1
net.ipv4.conf.default.arp_announce = 2

# Reverse path filtering: loose mode for VPNs and multi-homed hosts
net.ipv4.conf.all.rp_filter = 2
net.ipv4.conf.default.rp_filter = 2

# Disable acceptance and sending of redirects and source-routed packets
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# Log packets with impossible or invalid source addresses
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

##############################################################################
# NETWORKING: TCP PERFORMANCE AND HARDENING
##############################################################################

# Enable TCP timestamps (PAWS + RTT estimation)
net.ipv4.tcp_timestamps = 1

# Increase challenge ACK rate for improved protection
net.ipv4.tcp_challenge_ack_limit = 100000

# Use modern ephemeral port range to avoid conflicts with registered ports
net.ipv4.ip_local_port_range = 49152 65535

# TCP connection behavior
net.ipv4.tcp_fin_timeout = 20
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_syn_retries = 3
net.ipv4.tcp_synack_retries = 3
net.ipv4.tcp_syncookies = 1

# Enable MTU probing to avoid black holes when ICMP is filtered
net.ipv4.tcp_mtu_probing = 1

##############################################################################
# QUEUES AND BUFFERS
##############################################################################

# Use fq_codel queuing discipline to reduce bufferbloat
net.core.default_qdisc = fq_codel

# Network backlog and buffer sizing
net.core.netdev_max_backlog = 25000
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
net.core.somaxconn = 1024
