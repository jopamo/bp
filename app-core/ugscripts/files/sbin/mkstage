#!/bin/bash

# checks if run as root:
if ! [ "`whoami`" == "root" ]
then
	echo "`basename $0`: must be root."
	exit 1
fi

#set flag variables to null
QUIET=0
USAGE="usage:\n\
	`basename $0` [-q -c -b] [-s || -t <target-mountpoint>] <archive-filename> [custom-tar-options]\n\
	-q: activates quiet mode (no confirmation).\n\
	-s: makes tarball of current system.\n\
	-t: makes tarball of system located at the <target-mountpoint>.\n\
	-h: displays help message."

# reads options:
while getopts ':t:e:skqcblph' flag; do
	case "${flag}" in
		t)
			TARGET="$OPTARG"
			;;
		s)
			TARGET="/"
			;;
		q)
			QUIET=1
			;;
		h)
			echo -e "$USAGE"
			exit 0
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done

if [ "$TARGET" == "" ]
then
	echo "`basename $0`: no target specified."
	echo -e "$USAGE"
	exit 1
fi

# make sure TARGET path ends with slash
if [ "`echo $TARGET | grep -c '\/$'`" -le "0" ]
then
	TARGET="${TARGET}/"
fi

# shifts pointer to read mandatory output file specification
shift $(($OPTIND - 1))
ARCHIVE=$1

# checks for correct output file specification
if [ "$ARCHIVE" == "" ]
then
	echo "`basename $0`: no archive file name specified."
	echo -e "$USAGE"
	exit 1
fi

# checks for quiet mode (no confirmation)
if [ ${QUIET} -eq 1 ]
then
	AGREE="yes"
fi

# determines if filename was given with relative or absolute path
if [ "`echo $ARCHIVE | grep -c '^\/'`" -gt "0" ]
then
	STAGE3_FILENAME="${ARCHIVE}.tar.xz"
else
	STAGE3_FILENAME="`pwd`/${ARCHIVE}.tar.xz"
fi

EXCLUDES="--exclude=${TARGET}boot/*
	--exclude=${TARGET}dev/*
	--exclude=${TARGET}etc/.pwd.lock
	--exclude=${TARGET}etc/config-archive
	--exclude=${TARGET}etc/localtime
	--exclude=${TARGET}etc/mtab
	--exclude=${TARGET}etc/qemu
	--exclude=${TARGET}etc/resolv.conf
	--exclude=${TARGET}etc/ssh/*{key,pub}
	--exclude=${TARGET}etc/.updated
	--exclude=${TARGET}etc/*-
	--exclude=${TARGET}home/*
	--exclude=${TARGET}lib/modules/*
	--exclude=${TARGET}lib64/modules/*
	--exclude=${TARGET}lost+found
	--exclude=${TARGET}media/*
	--exclude=${TARGET}mnt/*
	--exclude=${TARGET}opt/*
	--exclude=${TARGET}proc/*
	--exclude=${TARGET}root/*
	--exclude=${TARGET}run/*
	--exclude=${TARGET}sys/*
	--exclude=${TARGET}tmp/*
	--exclude=${TARGET}usr/distfiles
	--exclude=${TARGET}usr/packages
	--exclude=${TARGET}usr/portage
	--exclude=${TARGET}usr/share/doc
	--exclude=${TARGET}usr/share/gtk-doc
	--exclude=${TARGET}usr/share/man
	--exclude=${TARGET}usr/src/*
	--exclude=${TARGET}var/cache/distfiles/*
	--exclude=${TARGET}var/cache/edb/*
	--exclude=${TARGET}var/cache/eix/*
	--exclude=${TARGET}var/cache/ldconfig/*
	--exclude=${TARGET}var/cache/man/*
	--exclude=${TARGET}var/cache/packages/*
	--exclude=${TARGET}var/cache/private/*
	--exclude=${TARGET}var/db/repos/*
	--exclude=${TARGET}var/lib/connman
	--exclude=${TARGET}var/lib/dbus/*
	--exclude=${TARGET}var/lib/portage/world
	--exclude=${TARGET}var/lock/*
	--exclude=${TARGET}var/log/*
	--exclude=${TARGET}var/run/*
	--exclude=${TARGET}var/tmp/*"

if [ "$TARGET" == "/" ]
	then
		EXCLUDES+=" --exclude=/${STAGE3_FILENAME#/}"
fi

if [ "$AGREE" != "yes" ]
then
	echo "Are you sure that you want to make a tarball of the system"
	echo "located under the following directory?"
	echo "$TARGET"
	echo ""
	echo -n "Type \"yes\" to continue or anything else to quit: "
	read AGREE
fi

if [ "$AGREE" == "yes" ]
then
	rm -f ${TARGET}etc/machine-id && touch ${TARGET}etc/machine-id

	mkdir -p ${TARGET}var/log/journal
	mkdir -p ${TARGET}var/empty
	mkdir -p ${TARGET}etc/ssh
	mkdir -p ${TARGET}run/lock

	chmod -R 600 ${TARGET}var/empty
	chmod -R 600 ${TARGET}etc/ssh

	XZ_OPT="--x86 --delta=dist=2 --lzma2=dict=128Mi -e9" tar -cJ --ignore-failed-read $EXCLUDES -f $STAGE3_FILENAME ${TARGET}*
fi

exit 0
