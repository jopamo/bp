From 2dcee958a412210cd1260f866ac199f68f28cf08 Mon Sep 17 00:00:00 2001
From: fivepiece <fivepiece@users.noreply.github.com>
Date: Tue, 20 Jun 2017 22:14:04 +0300
Subject: [PATCH] array indexes agree with var_index, var_nane, ix

---
 bc/storage.c | 1 +
 h/number.h   | 3 +++
 lib/number.c | 9 +++++++++
 3 files changed, 13 insertions(+)

diff --git a/bc/storage.c b/bc/storage.c
index c79db82..f3c8854 100644
--- a/bc/storage.c
+++ b/bc/storage.c
@@ -1018,6 +1018,7 @@ process_params (program_counter *progctr, int func)
 	
 		/* Compute source index and make sure some structure exists. */
 		ix = (int) bc_num2long (ex_stack->s_num);
+        ix = (int) bc_baseconvert (ix, 10, o_base);
 		(void) get_array_num (ix, 0);    
 	
 		/* Push a new array and Compute Destination index */
diff --git a/h/number.h b/h/number.h
index abf6332..ec74d7a 100644
--- a/h/number.h
+++ b/h/number.h
@@ -140,4 +140,7 @@ void bc_out_num (bc_num num, int o_base, void (* out_char)(int),
 			     int leading_zero);
 
 void bc_out_long (long val, int size, int space, void (*out_char)(int));
+
+/* recursive base conversion added to util.c */
+long bc_baseconvert(long num, int ibase, int obase);
 #endif
diff --git a/lib/number.c b/lib/number.c
index f394e92..005f64d 100644
--- a/lib/number.c
+++ b/lib/number.c
@@ -1703,6 +1703,15 @@ bc_str2num (bc_num *num, char *str, int scale)
     }
 }
 
+/* recursive base conversion */
+long
+bc_baseconvert(long num, int ibase, int obase){
+  if(num == 0 || num == 1 || (ibase == obase))
+    return num;
+
+  return (num % obase) + (ibase * bc_baseconvert(num / obase, ibase, obase));
+}
+
 /* Debugging routines */
 
 #ifdef DEBUG
