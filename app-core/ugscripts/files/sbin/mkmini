#!/bin/bash

UNAMEM="$(uname -m)"
ARCH=""

if [[ $UNAMEM == x86_64 ]]; then
    ARCH=amd64
elif [[ $UNAMEM == aarch64 ]]; then
    ARCH=arm64
else
    echo "Unable to detect architecture! Exiting..." && exit 1
fi

ADDITIONAL_PACKAGES=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        -p)
            shift
            while [[ $# -gt 0 && $1 != -* ]]; do
                ADDITIONAL_PACKAGES+=("$1")
                shift
            done
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

BASE_PACKAGES=(
    "app-build/gettext"
    "app-compression/bzip2"
    "app-compression/lz4"
    "app-compression/pigz"
    "app-compression/xz-utils"
    "app-compression/zstd"
    "app-core/acl"
    "app-core/attr"
    "app-core/bash"
    "app-core/busybox"
    "app-core/coreutils"
    "app-core/pambase"
    "app-core/shadow"
    "app-core/systemd"
    "app-core/util-linux"
    "app-var/ca-certificates"
    "lib-core/expat"
    "lib-core/libcap"
    "lib-core/libcap-ng"
    "lib-core/libgcrypt"
    "lib-core/libgpg-error"
    "lib-core/libpcre"
    "lib-core/libpcre2"
    "lib-core/libseccomp"
    "lib-core/mpfr"
    "lib-core/musl"
    "lib-core/ncurses"
    "lib-core/pam"
    "lib-core/readline"
    "lib-core/zlib"
    "lib-net/libtirpc"
)

if [[ ${#ADDITIONAL_PACKAGES[@]} -gt 0 ]]; then
	echo "Installing additional packages..."
	for package in "${ADDITIONAL_PACKAGES[@]}"; do
		emerge --oneshot "$package" || { echo "Failed to emerge $package"; exit 1; }
	done
fi

MINIROOT="/root/miniroot-${ARCH}-$(date +%Y%m%d)"
mkdir -p "${MINIROOT}/"{usr/{bin,sbin,lib},proc,sys,dev,root,home,tmp,run}

cd "${MINIROOT}" || exit
ln -s usr/bin bin
ln -s usr/sbin sbin
ln -s usr/lib lib
ln -s usr/lib lib64

extract_package() {
    local package_path=$1
    local package_name=$(basename "${package_path}")

    cp "${package_path}" "${MINIROOT}"
    cd "${MINIROOT}" || exit
    tar xvhf "${package_name}" --xattrs --strip-components=1
    rm "${package_name}"
}

for package in "${BASE_PACKAGES[@]}"; do
    package_path="/var/cache/packages/${package}/*"
    for file in ${package_path}; do
        extract_package "${file}"
    done
done

for package in "${ADDITIONAL_PACKAGES[@]}"; do
    package_path="/var/cache/packages/${package}/*"
    for file in ${package_path}; do
        extract_package "${file}"
    done
done

cp -p /usr/lib64/libgcc_s.so* "${MINIROOT}/usr/lib/"
cp -p /usr/lib64/libstdc++.so* "${MINIROOT}/usr/lib/"
cp -rp /usr/lib64/os-release "${MINIROOT}/usr/lib/"

rm -rf "${MINIROOT}/etc/{config-archive,eclean,eixrc,env.d,portage,w3m,xml}"
rm -f "${MINIROOT}/etc/ssh/ssh_host*"
rm -rf "${MINIROOT}usr/share/layout"
rm -rf "${MINIROOT}/usr/include"
rm -rf "${MINIROOT}/usr/lib/pkgconfig"
rm -rf "${MINIROOT}/usr/lib/modprobe.d"
rm -rf "${MINIROOT}/etc"
rm -rf "${MINIROOT}/usr/share/{man,doc,i18n,gettext}"
rm -f "${MINIROOT}/usr/bin/locale-gen"
rm -rf "${MINIROOT}/var/log/journal/*"
rm -f "${MINIROOT}/etc/machine-id"

cp -rp /etc "${MINIROOT}/"
head -c 16 /dev/urandom | od -An -tx1 | tr -d ' \n' > "${MINIROOT}/etc/machine-id"

echo "Running depclean to remove unnecessary dependencies..."
emerge --depclean || { echo "Failed to run depclean"; exit 1; }

XZ_OPT="-e9" tar -cJf "/root/miniroot-${ARCH}-$(date +%Y%m%d).tar.xz" -C "${MINIROOT}" .

echo "Minimal root filesystem created at /root/miniroot-${ARCH}-$(date +%Y%m%d).tar.xz"
