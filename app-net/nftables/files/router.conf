# /etc/nftables.conf

flush ruleset

define WAN        = "enp1s0"
define LAN        = "enp2s0"
define LAN_NET    = 10.0.5.0/24
define ROUTERIP   = 10.0.5.1
define LAN_BCAST  = 10.0.5.255
define PRINTER_IP = 10.0.5.7

table ip filter {

  # reserved/bogon sources we never want to see arriving from WAN
  set martians_v4 {
    type ipv4_addr
    flags interval
    elements = { 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10,
                 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12,
                 192.0.2.0/24, 192.168.0.0/16, 198.18.0.0/15,
                 224.0.0.0/4, 240.0.0.0/4 }
  }

  # -------------------------------
  # INPUT: traffic to the router
  # -------------------------------
  chain input {
    type filter hook input priority 0; policy drop;

    # conntrack fast path + sanity
    ct state established,related accept
    ct state invalid counter drop
    tcp flags & (syn|rst|ack) != syn ct state new drop

    # loopback + silence unsolicited WAN
    iif lo accept
    iifname $WAN drop

    # DHCP from LAN clients to the router
    iifname $LAN udp sport 68 udp dport 67 accept

    # LAN anti-spoof on input
    iifname $LAN ip saddr != $LAN_NET drop

    # SSH + DNS to the router
    iifname $LAN ip saddr $LAN_NET tcp dport 22 ct state new tcp flags syn accept
    iifname $LAN ip saddr $LAN_NET ip daddr $ROUTERIP udp dport 53 accept
    iifname $LAN ip saddr $LAN_NET ip daddr $ROUTERIP tcp dport 53 accept

    # Useful ICMP from LAN (ping/PMTU)
    iifname $LAN ip saddr $LAN_NET icmp type { echo-request, destination-unreachable, time-exceeded } accept

    # --- PRINTER DISCOVERY HELPERS ON FLAT LAN ---
    # Brother legacy discovery (UDP 54925 broadcast)
    iifname $LAN ip saddr $LAN_NET meta pkttype broadcast ip daddr { 255.255.255.255, $LAN_BCAST } \
      udp dport 54925 accept
    # (NetBIOS name service, only if you need it on your LAN)
    iifname $LAN ip saddr $LAN_NET meta pkttype broadcast ip daddr { 255.255.255.255, $LAN_BCAST } \
      udp dport 137 accept

    # --- OPTIONAL: mDNS to router ONLY if you run an mDNS reflector (Avahi) for cross-VLAN AirPrint/AirScan ---
    # iifname $LAN ip daddr 224.0.0.251 udp dport 5353 accept   # mDNS (Bonjour), UDP 5353 to 224.0.0.251 [RFC 6762]

    # Block direct DoT to the router
    iifname $LAN udp dport 853 drop
    iifname $LAN tcp dport 853 drop

    # log tail
    counter log prefix "INPUT_DROP " limit rate 5/second drop
  }

  # -------------------------------
  # FORWARD: LAN <-> WAN through router
  # -------------------------------
  chain forward {
    type filter hook forward priority 0; policy drop;

    # sanity
    ct state invalid drop
    tcp flags & (syn|rst|ack) != syn ct state new drop

    # LAN anti-spoof in forward
    iifname $LAN ip saddr != $LAN_NET drop

    # drop bogons seen on WAN
    iifname $WAN ip saddr @martians_v4 drop

    # block LAN clients sending DNS-over-TLS directly to Internet
    iifname $LAN oifname $WAN udp dport 853 drop
    iifname $LAN oifname $WAN tcp dport 853 drop

    # allow normal Internet access + return
    iifname $LAN oifname $WAN accept
    iifname $WAN oifname $LAN ct state established,related accept

    counter log prefix "FORWARD_DROP " limit rate 5/second drop
  }

  # router's own output
  chain output { type filter hook output priority 0; policy accept;
  }
}

# -------------------------------
# NAT (IPv4)
# -------------------------------
table ip nat {
  chain prerouting {
    type nat hook prerouting priority -100;

    # force all LAN DNS to local resolver on router
    iifname $LAN udp dport 53 redirect to :53
    iifname $LAN tcp dport 53 redirect to :53
  }

  chain postrouting {
    type nat hook postrouting priority 100;

    # masquerade all outbound on WAN
    oifname $WAN masquerade
  }
}
