diff -urN a/configure.ac b/configure.ac
--- a/configure.ac	2020-06-19 21:20:10.032535196 -0500
+++ b/configure.ac	2020-06-19 21:36:05.542881148 -0500
@@ -200,48 +200,7 @@
 AC_ARG_ENABLE(simd,
     AS_HELP_STRING([--disable-simd],[disable SIMD optimizations (requires c++)]))
 
-if test x"$enable_simd" != x"no"; then
-    # For x86-64 SIMD, g++ >=5 or clang++ >=7 is required
-    if test x"$build_cpu" = x"x86_64"; then
-	CXX_OK=
-	if test x"$CXX" != x""; then
-	    CXX_VERSION=`$CXX --version 2>/dev/null | head -n 1`
-	    case "$CXX_VERSION" in
-	    g++*)
-		CXX_VERSION=`$CXX -dumpversion | sed 's/\..*//g'`
-		if test "$CXX_VERSION" -ge "5"; then
-		    CXX_OK=yes
-		fi
-		;;
-	    *clang*)
-		# $CXX -dumpversion would have been ideal, but is broken on older clang
-		CXX_VERSION=`echo "$CXX_VERSION" | sed 's/.*version //g' | sed 's/\..*//g'`
-		if test "$CXX_VERSION" -ge "7"; then
-		    CXX_OK=yes
-		fi
-		;;
-	    *)
-		CXX_VERSION='Unknown'
-		;;
-	    esac
-	else
-	    CXX='No c++'
-	    CXX_VERSION='Unknown'
-	fi
-	if test x"$CXX_OK" = x"yes"; then
-	    # AC_MSG_RESULT() is called below.
-	    SIMD="$SIMD x86_64"
-	else
-	    AC_MSG_RESULT(error)
-	    AC_MSG_ERROR([Failed to find g++ >=5 or clang++ >=7 for SIMD optimizations.
-Specify --disable-simd to continue without it. ($CXX, $CXX_VERSION)])
-	fi
-    elif test x"$enable_simd" = x"yes"; then
-        AC_MSG_RESULT(unavailable)
-        AC_MSG_ERROR(The SIMD optimizations are currently x86_64 only.
-Omit --enable-simd to continue without it.)
-    fi
-fi
+SIMD="$SIMD x86_64"
 
 if test x"$SIMD" != x""; then
     SIMD=`echo "$SIMD" | sed 's/^ *//'`
