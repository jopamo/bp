cat /etc/nftables.conf
# /etc/nftables.conf

# Flush all existing rules
flush ruleset

# Interface & network variables
define WAN      = "enp1s0"
define LAN      = "enp2s0"
define LAN_NET  = 10.0.5.0/24
define ROUTERIP = 10.0.5.1

# -------------------------------
# Table: filter (IPv4)
# -------------------------------
table ip filter {

  #
  # Chain: input (traffic to the router itself)
  #
  chain input {
    type filter hook input priority 0; policy drop;

    # Keep router usable: allow return/related traffic first (no unsolicited WAN allowed below)
    ct state established,related accept comment "Allow established/related"

    # Sanity
    ct state invalid counter drop comment "Drop invalid packets"
    tcp flags & (syn|rst|ack) != syn ct state new drop comment "Drop NEW TCP without SYN"

    # Loopback
    iif lo accept comment "Allow loopback"

    # Silence: drop all remaining WAN input (no logs, no replies)
    iifname $WAN drop comment "Drop all unsolicited WAN input (silent)"

    # DHCP from LAN clients (0.0.0.0:68 -> 255.255.255.255:67 or $ROUTERIP:67)
    iifname $LAN udp sport 68 udp dport 67 accept comment "Allow DHCP (LAN->router)"

    # Anti-spoof on LAN
    iifname $LAN ip saddr != $LAN_NET drop comment "Anti-spoof on LAN"

    # SSH from LAN only
    iifname $LAN ip saddr $LAN_NET tcp dport 22 ct state new tcp flags syn accept comment "Allow SSH from LAN"

    # LAN -> router DNS (dnsmasq)
    iifname $LAN ip saddr $LAN_NET ip daddr $ROUTERIP udp dport 53 accept comment "Allow LAN->DNS(UDP)"
    iifname $LAN ip saddr $LAN_NET ip daddr $ROUTERIP tcp dport 53 accept comment "Allow LAN->DNS(TCP)"

    # Useful ICMP from LAN
    iifname $LAN ip saddr $LAN_NET icmp type { echo-request, destination-unreachable, time-exceeded } accept comment "Allow useful ICMP from LAN"

    # Broadcast helpers on LAN
    iifname $LAN ip saddr $LAN_NET ip daddr 255.255.255.255 udp dport 54925 accept comment "Allow Brother scanner discovery"
    iifname $LAN ip saddr $LAN_NET ip daddr 255.255.255.255 udp dport 137   accept comment "Allow NetBIOS name service"

    # Block direct DoT to the router itself
    iifname $LAN udp dport 853 drop comment "Block direct DoT (UDP) to router"
    iifname $LAN tcp dport 853 drop comment "Block direct DoT (TCP) to router"

    # Log + drop everything else (local logs only; WAN already silenced above)
    counter log prefix "INPUT_DROP: " limit rate 5/second drop comment "Log+drop other input"
  }

  #
  # Chain: forward (LAN <-> WAN through the router)
  #
  chain forward {
    type filter hook forward priority 0; policy drop;

    # Sanity
    ct state invalid drop comment "Drop invalid in forward"
    tcp flags & (syn|rst|ack) != syn ct state new drop comment "Drop NEW TCP without SYN (forward)"

    # Block LAN clients from sending DoT directly to the Internet
    iifname $LAN oifname $WAN udp dport 853 drop comment "Block LAN->external DoT (UDP)"
    iifname $LAN oifname $WAN tcp dport 853 drop comment "Block LAN->external DoT (TCP)"

    # Gaming/VoIP friendly: general LAN->WAN forwarding
    iifname $LAN oifname $WAN accept comment "Allow LAN->WAN (gaming/VoIP friendly)"

    # Return/related traffic allowed back
    iifname $WAN oifname $LAN ct state established,related accept comment "Allow WAN->LAN return/related"

    # Log + drop everything else (rate-limited)
    counter log prefix "FORWARD_DROP: " limit rate 5/second drop comment "Log+drop other forwarded traffic"
  }

  #
  # Chain: output (traffic from the router)
  #
  chain output {
    type filter hook output priority 0; policy accept;
  }
}

# -------------------------------
# Table: nat (IPv4)
# -------------------------------
table ip nat {
  chain prerouting {
    type nat hook prerouting priority -100;

    # Redirect all LAN DNS to local dnsmasq on the router
    iifname $LAN udp dport 53 redirect to :53 comment "Redirect DNS (UDP) to local dnsmasq"
    iifname $LAN tcp dport 53 redirect to :53 comment "Redirect DNS (TCP) to local dnsmasq"
  }

  chain postrouting {
    type nat hook postrouting priority 100;

    # Masquerade all traffic going out WAN (NAT for gaming/VoIP)
    oifname $WAN masquerade comment "Masquerade outbound"
  }
}
