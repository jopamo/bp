# /etc/nftables.conf
flush ruleset

define wan     = "enp1s0"
define lan     = "enp2s0"
define lan_net = 10.0.5.0/24
define rtr_ip  = 10.0.5.1
define qb_port = 52345

table ip filter {
  chain input {
    type filter hook input priority 0; policy drop;

    # fast-path
    ct state invalid drop
    ct state { established, related } accept

    # loopback
    iif lo accept

    # anti-spoof
    iifname $lan ip saddr != $lan_net drop
    iifname $wan ip saddr $lan_net drop

    # hard blackhole from WAN (no logs, no rejects)
    iifname $wan drop

    # mgmt/services from LAN
    iifname $lan ip saddr $lan_net tcp dport 22 accept          # SSH from LAN

    # DHCP client->server (broadcast allowed)
    iifname $lan ip saddr $lan_net udp sport 68 udp dport 67 accept

    # local DNS to router
    iifname $lan ip saddr $lan_net ip daddr $rtr_ip udp dport 53 accept
    iifname $lan ip saddr $lan_net ip daddr $rtr_ip tcp dport 53 accept

    # useful ICMP from LAN (for pinging out/troubleshooting)
    iifname $lan ip saddr $lan_net icmp type { echo-request, destination-unreachable, time-exceeded } accept

    # qBittorrent on router, LAN only
    iifname $lan ip saddr $lan_net tcp dport $qb_port ct state new accept
    iifname $lan ip saddr $lan_net udp dport $qb_port ct state new accept

    # block direct DNS-over-TLS to router (force plain DNS to router)
    iifname $lan tcp dport 853 drop
    iifname $lan udp dport 853 drop

    # default: silent drop (no logging for invisibility)
  }

  chain forward {
    type filter hook forward priority 0; policy drop;

    # fast-path
    ct state invalid drop
    ct state { established, related } accept

    # anti-spoof on forward
    iifname $lan ip saddr != $lan_net drop
    iifname $wan ip saddr $lan_net drop

    # allow router-originated DoT to WAN (if you use DoT on the router)
    ip saddr $rtr_ip oifname $wan tcp dport 853 accept
    ip saddr $rtr_ip oifname $wan udp dport 853 accept

    # block LAN clients from sending DoT straight to WAN
    iifname $lan oifname $wan tcp dport 853 drop
    iifname $lan oifname $wan udp dport 853 drop

    # general LAN -> WAN
    iifname $lan oifname $wan accept

    # default: silent drop
  }

  chain output {
    type filter hook output priority 0; policy accept;
    # leave router’s own egress open; replies return via input’s established rule
  }
}

table ip nat {
  chain prerouting {
    type nat hook prerouting priority -100;
    # force all LAN DNS to the router (transparent)
    iifname $lan tcp dport 53 redirect to :53
    iifname $lan udp dport 53 redirect to :53
  }

  chain postrouting {
    type nat hook postrouting priority 100;
    oifname $wan masquerade
  }
}
