diff -urN a/bin/phase-helpers.sh b/bin/phase-helpers.sh
--- a/bin/phase-helpers.sh	2025-10-20 03:48:51.658419157 -0500
+++ b/bin/phase-helpers.sh	2025-10-20 03:54:31.757231204 -0500
@@ -28,6 +28,61 @@
         PORTAGE_DOSTRIP+=( / )
 fi
 
+# @FUNCTION: cleanup_install
+# @DESCRIPTION:
+# Minimize the installed files while keeping full en_US.UTF-8 support
+cleanup_install() {
+	# drop docs and zsh completion trees
+	rm -rf "${ED}"/usr/share/{doc,zsh}
+
+	# keep only core man sections (man1, man2, â€¦)
+	if [[ -d ${ED}/usr/share/man ]]; then
+		find "${ED}"/usr/share/man -mindepth 1 -maxdepth 1 -type d \
+			! -name 'man*' -exec rm -rf {} +
+	fi
+
+	# keep English message catalogs and locale.alias
+	if [[ -d ${ED}/usr/share/locale ]]; then
+		find "${ED}"/usr/share/locale -mindepth 1 -maxdepth 1 -type d \
+			! -name 'en' ! -name 'en_US' ! -name 'en_GB' -exec rm -rf {} +
+		find "${ED}"/usr/share/locale -maxdepth 1 -type f \
+			! -name 'locale.alias' -delete
+	fi
+
+	# keep only the locale source files en_US pulls in
+	if [[ -d ${ED}/usr/share/i18n/locales ]]; then
+		find "${ED}"/usr/share/i18n/locales -maxdepth 1 -type f \
+			! -name 'en_US' \
+			! -name 'en_GB' \
+			! -name 'i18n' \
+			! -name 'i18n_ctype' \
+			! -name 'iso14651*' \
+			! -name 'translit*' \
+			! -name 'C' \
+			! -name 'POSIX' -delete
+	fi
+}
+
+# @FUNCTION: get_modname
+# @USAGE:
+# @DESCRIPTION:
+# Returns modulename with proper suffix {.so,.bundle,etc} for the current
+# platform identified by CHOST.
+#
+# Example:
+#     libfoo$(get_modname)
+#     Returns: libfoo.so (ELF) || libfoo.bundle (MACH) || ...
+get_modname() {
+	local modname
+	local ver=$1
+	case ${CHOST} in
+		*)                        modname="so";;
+	esac
+
+	echo ".${modname}"
+}
+
+
 into() {
 	if [[ "$1" == "/" ]]; then
 		export __E_DESTTREE=""
@@ -643,7 +698,12 @@
 			--infodir="${EPREFIX}"/usr/share/info \
 			--datadir="${EPREFIX}"/usr/share \
 			--sysconfdir="${EPREFIX}"/etc \
-			--localstatedir="${EPREFIX}"/var/lib \
+			--sharedstatedir="${EPREFIX}"/var/lib \
+			--localstatedir="${EPREFIX}"/var \
+			--libdir="${EPREFIX}"/usr/lib \
+			--bindir="${EPREFIX}"/usr/bin \
+			--sbindir="${EPREFIX}"/usr/bin \
+			--libexecdir="${EPREFIX}"/usr/libexec \
 			"${conf_args[@]}" \
 			"$@" \
 			"${EXTRA_ECONF[@]}"
@@ -696,9 +756,14 @@
 			${MAKE:-make} -n prefix="${ED%/}/usr" \
 				datadir="${ED%/}/usr/share" \
 				infodir="${ED%/}/usr/share/info" \
-				localstatedir="${ED%/}/var/lib" \
-				mandir="${ED%/}/usr/share/man" \
-				sysconfdir="${ED%/}/etc" \
+				sharedstatedir="${ED%/}/var/lib" \
+				localstatedir="${ED%/}/var" \
+ 				mandir="${ED%/}/usr/share/man" \
+ 				sysconfdir="${ED%/}/etc" \
+				libdir="${ED%/}/usr/lib" \
+				bindir="${ED%/}/usr/bin" \
+				sbindir="${ED%/}/usr/bin" \
+				libexecdir="${ED%/}/usr/libexec" \
 				${LOCAL_EXTRA_EINSTALL} \
 				${MAKEOPTS} -j1 \
 				"$@" ${EXTRA_EMAKE} install
@@ -707,9 +772,14 @@
 		if ! ${MAKE:-make} prefix="${ED%/}/usr" \
 			datadir="${ED%/}/usr/share" \
 			infodir="${ED%/}/usr/share/info" \
-			localstatedir="${ED%/}/var/lib" \
-			mandir="${ED%/}/usr/share/man" \
-			sysconfdir="${ED%/}/etc" \
+			sharedstatedir="${ED%/}/var/lib" \
+			localstatedir="${ED%/}/var" \
+ 			mandir="${ED%/}/usr/share/man" \
+ 			sysconfdir="${ED%/}/etc" \
+			libdir="${ED%/}/usr/lib" \
+			bindir="${ED%/}/usr/bin" \
+			sbindir="${ED%/}/usr/bin" \
+			libexecdir="${ED%/}/usr/libexec" \
 			${LOCAL_EXTRA_EINSTALL} \
 			${MAKEOPTS} -j1 \
 			"$@" ${EXTRA_EMAKE} install
@@ -792,21 +862,8 @@
 		emake DESTDIR="${D}" install
 	fi
 
-	# To use declare -p determines whether a variable was declared but not
-	# whether it was set. Unfortunately, the language of EAPI 4 requires
-	# that it be this way.
-	# https://projects.gentoo.org/pms/4/pms.html#x1-10400010.1.9
-	if ! declare -p DOCS &>/dev/null ; then
-		local d
-		for d in README* ChangeLog AUTHORS NEWS TODO CHANGES \
-				THANKS BUGS FAQ CREDITS CHANGELOG ; do
-			[[ -s "${d}" ]] && dodoc "${d}"
-		done
-	elif [[ ${DOCS@a} == *a* ]] ; then
-		dodoc "${DOCS[@]}"
-	else
-		dodoc ${DOCS}
-	fi
+	cleanup_install
+	dedup_symlink "${D}"
 }
 
 __eapi6_src_prepare() {
@@ -824,7 +881,8 @@
 		emake DESTDIR="${D}" install
 	fi
 
-	einstalldocs
+	cleanup_install
+	dedup_symlink "${D}"
 }
 
 __eapi8_src_prepare() {
@@ -958,38 +1016,6 @@
 	}
 fi
 
-if ___eapi_has_einstalldocs; then
-	einstalldocs() (
-		local f
-
-		# The implementation deviates from PMS, which purports to be
-		# concerned with whether the "DOCS variable is unset". In fact,
-		# the implementation checks whether the variable is undeclared.
-		# However, it is PMS that is in the wrong. See bug #962934.
-		if [[ ! ${DOCS@A} ]]; then
-			for f in README* ChangeLog AUTHORS NEWS TODO CHANGES \
-				THANKS BUGS FAQ CREDITS CHANGELOG
-			do
-				if [[ -f ${f} && -s ${f} ]]; then
-					docinto / && dodoc "${f}"
-				fi
-			done
-		elif [[ ${DOCS@a} == *a* ]] && (( ${#DOCS[@]} )); then
-			docinto / && dodoc -r "${DOCS[@]}"
-		elif [[ ${DOCS@a} != *[aA]* && ${DOCS} ]]; then
-			# shellcheck disable=2086
-			docinto / && dodoc -r ${DOCS}
-		fi
-
-		if [[ ${HTML_DOCS@a} == *a* ]] && (( ${#HTML_DOCS[@]} )); then
-			docinto html && dodoc -r "${HTML_DOCS[@]}"
-		elif [[ ${HTML_DOCS@a} != *[aA]* && ${HTML_DOCS} ]]; then
-			# shellcheck disable=2086
-			docinto html && dodoc -r ${HTML_DOCS}
-		fi
-	)
-fi
-
 if ___eapi_has_eapply; then
 	# For BSD userland support, use gpatch if available.
 	if hash gpatch 2>/dev/null; then
