diff -urN a/featherpad/highlighter/highlighter.cpp b/featherpad/highlighter/highlighter.cpp
--- a/featherpad/highlighter/highlighter.cpp	2022-01-09 01:03:23.030954435 -0600
+++ b/featherpad/highlighter/highlighter.cpp	2022-01-09 01:09:01.438154314 -0600
@@ -217,6 +217,7 @@
     multilineQuote_ =
         (progLan != "xml" // xmlQuotes() is used
          && progLan != "sh" // SH_MultiLineQuote() is used
+         && progLan != "ebuild" // SH_MultiLineQuote() is used
          && progLan != "css" // cssHighlighter() is used
          && progLan != "pascal" && progLan != "LaTeX"
          && progLan != "diff" && progLan != "log"
@@ -232,6 +233,7 @@
         (progLan == "c" || progLan == "cpp" // single quotes can also show syntax errors
          || progLan == "python"
          || progLan == "sh" // not used in multiLineQuote()
+         || progLan == "ebuild" // not used in multiLineQuote()
          || progLan == "makefile" || progLan == "cmake"
          || progLan == "xml" // never used; xml is formatted separately
          || progLan == "ruby"
@@ -533,7 +535,7 @@
     /* keywords */
     QTextCharFormat keywordFormat;
     /* bash extra keywords */
-    if (progLan == "sh" || progLan == "makefile" || progLan == "cmake")
+    if (progLan == "sh" || progLan == "ebuild" || progLan == "makefile" || progLan == "cmake")
     {
         if (progLan == "cmake")
         {
@@ -807,7 +809,7 @@
         rule.format = urlFormat;
         highlightingRules.append (rule);
     }
-    else if (progLan == "sh" || progLan == "makefile" || progLan == "cmake"
+    else if (progLan == "sh" || progLan == "ebuild" || progLan == "makefile" || progLan == "cmake"
              || progLan == "perl" || progLan == "ruby")
     {
         /* # is the sh comment sign when it doesn't follow a character */
@@ -815,7 +817,7 @@
         {
             rule.pattern.setPattern ("(?<=^|\\s|;)#.*");
 
-            if (progLan == "sh")
+            if (progLan == "sh" || progLan == "ebuild")
             {
                 /* Kate uses something like: "<<(?:\\s*)([\\\\]{0,1}[^\\s]+)"
                 "<<-" can be used instead of "<<" */
@@ -843,7 +845,7 @@
 
         QTextCharFormat shFormat;
 
-        if (progLan == "sh" || progLan == "makefile" || progLan == "cmake")
+        if (progLan == "sh" || progLan == "ebuild" || progLan == "makefile" || progLan == "cmake")
         {
             /* make parentheses, braces and ; neutral as they were in keyword patterns */
             rule.pattern.setPattern ("[\\(\\){};]");
@@ -852,7 +854,7 @@
 
             shFormat.setForeground (Blue);
             /* words before = */
-             if (progLan == "sh")
+             if (progLan == "sh" || progLan == "ebuild")
                  rule.pattern.setPattern ("\\b[A-Za-z0-9_]+(?=\\=)");
              else
                  rule.pattern.setPattern ("\\b[A-Za-z0-9_]+\\s*(?=(\\+|\\?){0,1}\\=)");
@@ -900,7 +902,7 @@
             rule.format = shFormat;
             highlightingRules.append (rule);
         }
-        else if (progLan == "sh" || progLan == "makefile" || progLan == "cmake")
+        else if (progLan == "sh" || progLan == "ebuild" || progLan == "makefile" || progLan == "cmake")
         {
             shFormat.setForeground (DarkMagenta);
             /* operators */
@@ -2008,7 +2010,7 @@
             || progLan == "php"
             || progLan == "ruby"
             /* however, in Bash, single quote can be escaped only at start */
-            || ((progLan == "sh" || progLan == "makefile" || progLan == "cmake")
+            || ((progLan == "sh" || progLan == "ebuild" || progLan == "makefile" || progLan == "cmake")
                 && (isStartQuote || text.at (pos) == quoteMark.pattern().at (0))))
        )
     {
@@ -3473,7 +3475,7 @@
         int pos = 0;
         QRegularExpressionMatch match;
         while ((pos = text.indexOf (hereDocDelimiter, pos, &match)) >= 0
-               && (isQuoted (text, pos, progLan == "sh") // escaping start double quote before "$("
+               && (isQuoted (text, pos, progLan == "sh" || progLan == "ebuild") // escaping start double quote before "$("
                    || (progLan == "perl" && isInsideRegex (text, pos))))
 
         {
@@ -3482,7 +3484,7 @@
         if (pos >= 0)
         {
             int insideCommentPos;
-            if (progLan == "sh")
+            if (progLan == "sh" || progLan == "ebuild")
             {
                 static const QRegularExpression commentSH ("^#.*|\\s+#.*");
                 insideCommentPos = text.indexOf (commentSH);
@@ -3493,7 +3495,7 @@
                 insideCommentPos = text.indexOf (commentOthers);
             }
             if (insideCommentPos == -1 || pos < insideCommentPos
-                || isQuoted (text, insideCommentPos, progLan == "sh")
+                || isQuoted (text, insideCommentPos, progLan == "sh" || progLan == "ebuild")
                 || (progLan == "perl" && isInsideRegex (text, insideCommentPos)))
             { // the delimiter isn't (single-)commented out
                 int i = 1;
@@ -3525,7 +3527,7 @@
                 {
                     int n = static_cast<int>(qHash (delimStr));
                     int state = 2 * (n + (n >= 0 ? endState/2 + 1 : 0)); // always an even number but maybe negative
-                    if (progLan == "sh")
+                    if (progLan == "sh" || progLan == "ebuild")
                     {
                         if (isQuoted (text, pos, false))
                         { // to know whether a double quote is added/removed before "$(" in the current line
@@ -3976,7 +3978,7 @@
      * "Here" Documents *
      ********************/
 
-    if (progLan == "sh" || progLan == "perl" || progLan == "ruby")
+    if (progLan == "sh" || progLan == "ebuild" || progLan == "perl" || progLan == "ruby")
     {
         /* first, handle "__DATA__" in perl */
         if (progLan == "perl")
@@ -4081,7 +4083,7 @@
     /*****************************************
      * (Multiline) Quotations as well as CSS *
      *****************************************/
-    else if (progLan == "sh") // bash has its own method
+    else if (progLan == "sh" || progLan == "ebuild") // bash has its own method
         SH_MultiLineQuote (text);
     else if (progLan == "css")
     { // quotes and urls are highlighted by cssHighlighter() inside CSS values
@@ -4204,7 +4206,7 @@
            && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                || fi == commentFormat || fi == urlFormat
                || fi == regexFormat
-               || (progLan == "sh" && isEscapedChar (text, index))))
+               || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
     {
         index = text.indexOf ('(', index + 1);
         fi = format (index);
@@ -4222,7 +4224,7 @@
                && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                    || fi == commentFormat || fi == urlFormat
                    || fi == regexFormat
-                   || (progLan == "sh" && isEscapedChar (text, index))))
+                   || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
         {
             index = text.indexOf ('(', index + 1);
             fi = format (index);
@@ -4236,7 +4238,7 @@
            && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                || fi == commentFormat || fi == urlFormat
                || fi == regexFormat
-               || (progLan == "sh" && isEscapedChar (text, index))))
+               || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
     {
         index = text.indexOf (')', index + 1);
         fi = format (index);
@@ -4254,7 +4256,7 @@
                && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                    || fi == commentFormat || fi == urlFormat
                    || fi == regexFormat
-                   || (progLan == "sh" && isEscapedChar (text, index))))
+                   || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
         {
             index = text.indexOf (')', index + 1);
             fi = format (index);
@@ -4328,7 +4330,7 @@
            && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                || fi == commentFormat || fi == urlFormat
                || fi == regexFormat
-               || (progLan == "sh" && isEscapedChar (text, index))))
+               || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
     {
         index = text.indexOf ('[', index + 1);
         fi = format (index);
@@ -4346,7 +4348,7 @@
                && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                    || fi == commentFormat || fi == urlFormat
                    || fi == regexFormat
-                   || (progLan == "sh" && isEscapedChar (text, index))))
+                   || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
         {
             index = text.indexOf ('[', index + 1);
             fi = format (index);
@@ -4360,7 +4362,7 @@
            && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                || fi == commentFormat || fi == urlFormat
                || fi == regexFormat
-               || (progLan == "sh" && isEscapedChar (text, index))))
+               || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
     {
         index = text.indexOf (']', index + 1);
         fi = format (index);
@@ -4378,7 +4380,7 @@
                && (fi == quoteFormat || fi == altQuoteFormat || fi == urlInsideQuoteFormat
                    || fi == commentFormat || fi == urlFormat
                    || fi == regexFormat
-                   || (progLan == "sh" && isEscapedChar (text, index))))
+                   || (progLan == "sh" || progLan == "ebuild" && isEscapedChar (text, index))))
         {
             index = text.indexOf (']', index + 1);
             fi = format (index);
diff -urN a/featherpad/syntax.cpp b/featherpad/syntax.cpp
--- a/featherpad/syntax.cpp	2022-01-09 01:03:23.030954435 -0600
+++ b/featherpad/syntax.cpp	2022-01-09 01:13:43.120817819 -0600
@@ -85,7 +85,7 @@
             progLan = "cpp";
         else if (fname.endsWith (".c"))
             progLan = "c";
-        else if (fname.endsWith (".sh") || fname.endsWith (".bashrc") || fname.endsWith (".rules")
+        else if (fname.endsWith (".sh") || fname.endsWith (".bashrc") || fname.endsWith (".rules") || fname.endsWith (".ebuild")
                  || baseName == ".bash_profile" || baseName == ".bash_functions"
                  || baseName == ".xprofile" || baseName == ".profile"
                  || baseName == ".bash_aliases" || baseName == ".mkshrc"
