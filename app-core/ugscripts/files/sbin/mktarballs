#!/bin/bash

WORKHOME="${HOME}/gnu_tarballs"
TEMPLOCATION="/tmp/gnu_tarballs"

rm -rf ${TEMPLOCATION}
mkdir -p ${TEMPLOCATION}
cd ${WORKHOME}

[ ! -d ${WORKHOME}/coreutils ] && git clone https://github.com/coreutils/coreutils.git ${WORKHOME}/coreutils --depth 1
[ ! -d ${WORKHOME}/gnulib ] && git clone https://github.com/coreutils/gnulib.git ${WORKHOME}/gnulib

for i in gnulib coreutils ; do
	[ -d ${WORKHOME}/$i ] && ( cd ${WORKHOME}/$i && git remote update )
done

for i in coreutils gperf libtool diffutils findutils grep patch sed tar ; do
	[ ! -d ${WORKHOME}/$i ] && git clone https://git.savannah.gnu.org/git/$i.git ${WORKHOME}/$i --depth 1
	GITDATENAME="$i-$(cd ${WORKHOME}/$i && git log -n1 --pretty='format:%cd' --date=format:'%Y%m%d')"
	[ -d ${WORKHOME}/$i ] && ( cd ${WORKHOME}/$i && git remote update )

	if [[ $i == 'patch' ]]; then
		cp -rp ${WORKHOME}/gnulib ${TEMPLOCATION}/gnulib_patch
		( cd ${TEMPLOCATION}/gnulib_patch && git reset --hard b141afaf9ba197e361510da075556822ac453ff6 )
		( cd ${WORKHOME}/$i && ./bootstrap --skip-po --no-git --gnulib-srcdir=${TEMPLOCATION}/gnulib_patch )
	else
		( cd ${WORKHOME}/$i && rm -rf gnulib )
		( cd ${WORKHOME}/$i && ln -s ../gnulib gnulib )
		( cd ${WORKHOME}/$i && ./bootstrap --skip-po --no-git --gnulib-srcdir=${WORKHOME}/gnulib || ./autogen.sh )
	fi

	tar -hcf - $i | tar -xf - -C ${TEMPLOCATION}
	mv ${TEMPLOCATION}/$i ${TEMPLOCATION}/${GITDATENAME}
	find ${TEMPLOCATION}/${GITDATENAME} -name *~ -delete
	( cd ${TEMPLOCATION}/${GITDATENAME} && rm -rf .git* gnulib autom4te.cache po/.reference )
	find ${TEMPLOCATION}/${GITDATENAME} -name *.git* -delete
	( cd ${TEMPLOCATION} && XZOPT=-e9 tar cJf ${WORKHOME}/${GITDATENAME}.tar.xz ${GITDATENAME} --owner=0 --group=0 )
done

#librsvg
for i in librsvg ; do
	[ ! -d ${WORKHOME}/$i ] && git clone https://gitlab.gnome.org/GNOME/$i.git ${WORKHOME}/$i --depth 1
	GITDATENAME="$i-$(cd ${WORKHOME}/$i && git log -n1 --pretty='format:%cd' --date=format:'%Y%m%d')"
	[ -d ${WORKHOME}/$i ] && ( cd ${WORKHOME}/$i && git remote update )
	( cd ${WORKHOME}/$i && cargo vendor )
	mkdir -p "${WORKHOME}/$i/.cargo"
	echo -e "[source.crates-io]\n\
replace-with = \"vendored-sources\"\n\n\
[source.vendored-sources]\n\
directory = \"vendor\"" > "${WORKHOME}/$i/.cargo/config.toml"

	tar -hcf - $i | tar -xf - -C ${TEMPLOCATION}
	mv ${TEMPLOCATION}/$i ${TEMPLOCATION}/${GITDATENAME}
	find ${TEMPLOCATION}/${GITDATENAME} -name *~ -delete
	( cd ${TEMPLOCATION}/${GITDATENAME} && rm -rf .git* gnulib autom4te.cache po/.reference )
	find ${TEMPLOCATION}/${GITDATENAME} -name *.git* -delete
	( cd ${TEMPLOCATION} && XZOPT=-e9 tar cJf ${WORKHOME}/${GITDATENAME}.tar.xz ${GITDATENAME} --owner=0 --group=0 )
done
