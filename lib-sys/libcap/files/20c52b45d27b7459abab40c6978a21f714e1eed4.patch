From 20c52b45d27b7459abab40c6978a21f714e1eed4 Mon Sep 17 00:00:00 2001
From: "Andrew G. Morgan" <agm@google.com>
Date: Fri, 19 Apr 2019 15:05:15 +0000
Subject: Fix undefined behavior by shifting integer (1u) instead of signed
 integer (1).

This issue was found with a static analysis code quality linter highlighting
a 32-bit integer issue with some architectures.

Signed-off-by: Andrew G. Morgan <agm@google.com>
Signed-off-by: Andrew G. Morgan <morgan@kernel.org>
---
 libcap/libcap.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/libcap/libcap.h b/libcap/libcap.h
index dd1abe1..0156a92 100644
--- a/libcap/libcap.h
+++ b/libcap/libcap.h
@@ -131,9 +131,9 @@ struct _cap_struct {
  * kernel API cap set abstraction
  */
 
-#define raise_cap(x,set)   u[(x)>>5].flat[set]       |=  (1<<((x)&31))
-#define lower_cap(x,set)   u[(x)>>5].flat[set]       &= ~(1<<((x)&31))
-#define isset_cap(y,x,set) ((y)->u[(x)>>5].flat[set] &   (1<<((x)&31)))
+#define raise_cap(x, set)    u[(x) >> 5].flat[set]       |=  (1u << ((x)&31))
+#define lower_cap(x, set)    u[(x) >> 5].flat[set]       &= ~(1u << ((x)&31))
+#define isset_cap(y, x, set) ((y)->u[(x) >> 5].flat[set] &   (1u << ((x)&31)))
 
 /*
  * Private definitions for internal use by the library.
-- 
cgit 1.2-0.3.lf.el7

